'''
Created on Jul 15, 2015

@author: Daniel Bruce
'''
import hashlib
from Crypto.Hash import SHA512
from primary.iHashMethodology import iHashMethodology
from primary.clsBasicStringIntConverter import BasicStringIntConverter

class BasicHash(iHashMethodology):
	'''
	classdocs
	'''
	def __init__(self, pSalt = 0, pStringIntConverter = BasicStringIntConverter()):
		'''
		Constructor
		'''
		self.salt = pSalt
		self.stringIntConverter = pStringIntConverter
		
	def compute(self, pArgument):
		lclTempString = self.stringIntConverter.toString(pArgument + pSalt)
		lclTempString = hashlib.sha512(lclTempString.encode('utf-8')).hexdigest()
		return self.stringIntConverter.toInt(lclTempString)
		#lclHashFunction = SHA512.new()
		#lclString = str(pArgument)
		#lclHashValue = lclHashFunction.update(lclString)
		#lclHashDigest = lclHashValue.hexDigest()
		#lclHash = int(lclHashDigest)
		#return lclHash