'''
Created on Jul 15, 2015

@author: Daniel Bruce
'''
import hashlib
from primary.iHashMethodology import iHashMethodology
from primary.clsBasicStringIntConverter import BasicStringIntConverter

class BasicHash(iHashMethodology):
	'''
	classdocs
	'''
	def __init__(self, pSalt = 0, pStringIntConverter = BasicStringIntConverter()):
		'''
		Constructor
		'''
		self.salt = pSalt
		self.converter = pStringIntConverter
		
	def compute(self, pArgument):
		lclTemp = self.converter.toString(pArgument).encode('utf-8') #self.stringIntConverter.toString(pArgument + self.salt)
		#lclTempString = lclTempString.encode('utf-8')
		#print(lclTempString)
		lclTemp = hashlib.sha512().update(lclTemp)
		lclTemp = lclTemp.decode('utf-8') 
		return lclTemp
		#lclHashFunction = SHA512.new()
		#lclString = str(pArgument)
		#lclHashValue = lclHashFunction.update(lclString)
		#lclHashDigest = lclHashValue.hexDigest()
		#lclHash = int(lclHashDigest)
		#return lclHash