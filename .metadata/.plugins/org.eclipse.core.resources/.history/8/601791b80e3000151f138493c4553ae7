'''
Created on Jul 21, 2015

@author: Daniel Bruce

'''
from methodology.clsSimpleVault import SimpleVault
from methodology.clsPasswordTuple import PasswordTuple
from methodology.clsPasswordList import PasswordList

class IntermediateVault(object):
	'''
	classdocs
	'''
	def __init__(self, pVault = SimpleVault([]), pPasswordList = [], pRandomNumberGenerator = BigIntGenerator()):
		'''
		Constructor
		'''
		self.intermediate = pRandomNumberGenerator.generate()
		self.vault = pVault
		self.passwordList = pPasswordList
	
	def addPassword(self, pPasswordTuple):
		if not isinstance(pPasswordTuple, PasswordTuple):
			raise TypeError("Argument passed into append function for PasswordList is not a PasswordTuple.")
		for i in self.passwordList.getlist()		
		return
	
	def addKey(self, pKey):
		pass
	
	def removeKey(self, pKey):
		pass
	
	def removeKeyByName(self, pKeyName):
		pass